//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.12 at 11:20:41 AM CEST 
//


package com.eon.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * <p>Java class for OtrosConceptos complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OtrosConceptos">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Concepto" maxOccurs="3">
 *           &lt;complexType>
 *             &lt;simpleContent>
 *               &lt;extension base="&lt;http://localhost/elegibilidad>TipoConcepto">
 *               &lt;/extension>
 *             &lt;/simpleContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OtrosConceptos", propOrder = {
    "concepto"
})
public class OtrosConceptos {

    @XmlElement(name = "Concepto", required = true)
    protected List<OtrosConceptos.Concepto> concepto;

    /**
     * Gets the value of the concepto property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the concepto property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConcepto().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtrosConceptos.Concepto }
     * 
     * 
     */
    public List<OtrosConceptos.Concepto> getConcepto() {
        if (concepto == null) {
            concepto = new ArrayList<OtrosConceptos.Concepto>();
        }
        return this.concepto;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://localhost/elegibilidad>TipoConcepto">
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Concepto {

        @XmlValue
        protected String value;

        /**
         * 
         * 			01	Indemnizacion
         * 			02	Derechos de extensión
         * 			03	Derechos de acceso
         * 			04	Derechos de enganche
         * 			05	Derechos de verificación
         * 			06	Depósito de garantía
         * 			07	Gastos de anulación de contratos
         * 			08	Actuaciones en la medida
         * 			09	Reparametrización de la medida
         * 			10	2 º Cambio de Comercializador en el periodo de un año
         * 			11	Intereses de demora
         * 			12	Verificacion de Equipos de Medida
         * 			13	Derechos de Reconexion
         * 			14	Varios
         * 			15	Gastos de acometida
         * 			16	Abonos
         * 			17	Abono por calidad de suministro
         * 			18	Abono por calidad individual
         * 			19	Coste de reposición
         * 			32	Coste de corte a petición de comercializador
         * 			33	Coste de reconexión a petición de comercializador
         * 			40	Recargo fraccionado por refacturación (Orden IET/843/2012) del cuarto trimestre de 2011
         * 			41	Recargo fraccionado por refacturación (Orden IET/843/2012) del primer trimestre de 2012
         * 			42	Recargo fraccionado por refacturación (Orden IET/843/2012) de abril de 2012
         * 			
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

    }

}
